{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/usefulnode","result":{"data":{"markdownRemark":{"html":"<h1>Node.js</h1>\n<h3>About Node.js or Node for short.</h3>\n<p>Node (or more formally Node.js) is an open-source, cross-platform, runtime environment that allows developers to create all kinds of server-side tools and applications in JavaScript. The runtime is intended for use outside of a browser context (i.e. running directly on a computer or server OS). As such, the environment omits browser-specific JavaScript APIs and adds support for more traditional OS APIs including HTTP and file system libraries.</p>\n<h4>Hello world with node</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">const http = require(&#39;http&#39;);\n\nconst hostname = &#39;127.0.0.1&#39;;\nconst port = 3000;\n\nconst server = http.createServer((req, res) =&gt; {\n  res.statusCode = 200;\n  res.setHeader(&#39;Content-Type&#39;, &#39;text/plain&#39;);\n  res.end(&#39;Hello World\\n&#39;);\n});\n\nserver.listen(port, hostname, () =&gt; {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Express makes routin' easier!</h3>\n<p>Express is the most popular Node web framework, and is the underlying library for a number of other popular Node web frameworks. It provides mechanisms to:</p>\n<p>Write handlers for requests with different HTTP verbs at different URL paths (routes).\nIntegrate with \"view\" rendering engines in order to generate responses by inserting data into templates.\nSet common web application settings like the port to use for connecting, and the location of templates that are used for rendering the response.\nAdd additional request processing \"middleware\" at any point within the request handling pipeline.</p>\n<h4>Hello world with express</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">const express = require(&#39;express&#39;)\nconst app = express()\nconst port = 3000\n\napp.get(&#39;/&#39;, (req, res) =&gt; res.send(&#39;Hello World!&#39;))\n\napp.listen(port, () =&gt; console.log(`Example app listening on port ${port}!`))</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>Node mysql connection</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">let mysql = require(&quot;mysql&quot;);\nlet connection = mysql.createConnection({\n\n  host: &quot;localhost&quot;,\n  port: 3306,\n\n  // Your username\n  user: &quot;root&quot;,\n\n  // Your password\n  password: &quot;&quot;,\n  database: &quot;testDB&quot;\n});\n\nconnection.connect((err) =&gt; {\n  if (err) throw err;\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>Node mongodb connection</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">let mongojs = require(&quot;mongojs&quot;)\nlet databaseUrl = &quot;testDB&quot;;\nlet collections = [&quot;test&quot;];\nlet db = mongojs(databaseUrl, collections);\ndb.on(&quot;error&quot;, function(error) {\n  console.log(&quot;Database Error:&quot;, error);\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"Node.js About Node.js or Node for short. Node (or more formally Node.js) is an open-source, cross-platform, runtime environment that allows developers to createâ€¦","frontmatter":{"date":"09 October, 2019","path":"/blog/usefulnode","title":"Useful Node.js"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{}}}